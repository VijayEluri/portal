<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:devproof="http://www.devproof.org/schema/devproof/portal"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.devproof.org/schema/devproof/portal
        http://www.devproof.org/schema/devproof/portal-1.1.xsd">

    <devproof:module-scan
        base-package="org.devproof.portal.core.module"
        module-name="Devproof Core"
        author="devproof - Carsten Hufe" author-url="http://devproof.org"
        module-version="@devproofVersion@" portal-version="@devproofVersion@"/>

    <bean id="devproofVersion" class="java.lang.String">
        <constructor-arg value="@devproofVersion@"/>
    </bean>

    <!--  Base generic DAO  -->
    <bean id="baseGenericDao"
          class="org.devproof.portal.core.module.common.repository.FinderDispatcherGenericRepositoryImpl"
          parent="hibernateDaoSupport" abstract="true">
        <property name="usernameResolver" ref="usernameResolver"/>
    </bean>

    <!-- Common data provider DAO -->
    <bean id="dataProviderRepository" class="org.devproof.portal.core.module.common.repository.DataProviderRepositoryImpl"
          parent="hibernateDaoSupport"/>

    <!-- Persistence data provider -->
    <bean id="persistenceDataProvider"
          class="org.devproof.portal.core.module.common.dataprovider.SortablePersistenceDataProviderImpl"
          abstract="true" scope="prototype">
        <property name="dataProviderRepository" ref="dataProviderRepository"/>
    </bean>

    <!-- Date Formater -->
    <bean id="inputDateFormat" factory-bean="dateFormatFactory" factory-method="createInputDateFormat"
          scope="prototype"/>
    <bean id="inputDateTimeFormat" factory-bean="dateFormatFactory" factory-method="createInputDateTimeFormat"
          scope="prototype"/>
    <bean id="displayDateFormat" factory-bean="dateFormatFactory" factory-method="createDisplayDateFormat"
          scope="prototype"/>
    <bean id="displayDateTimeFormat" factory-bean="dateFormatFactory" factory-method="createDisplayDateTimeFormat"
          scope="prototype"/>


    <bean id="jndiConfig"
          class="org.devproof.portal.core.module.common.util.JndiConfiguration"/>

    <bean id="mailSenderService" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="session">
            <bean lazy-init="true" class="org.springframework.jndi.JndiObjectFactoryBean">
                <property name="jndiName">
                    <bean factory-bean="jndiConfig" factory-method="getMailSessionJndiName"/>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="dataSource" lazy-init="true"
          class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <bean factory-bean="jndiConfig" factory-method="getDataSourceJndiName"/>
        </property>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
          lazy-init="false">
        <property name="hibernateProperties">
            <bean factory-bean="jndiConfig" factory-method="resolveHibernateProperties"/>
        </property>
        <property name="dataSource" ref="dataSource"/>

        <property name="annotatedClasses">
            <bean factory-bean="entityLocator" factory-method="getEntities"/>
        </property>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="allowCreate" value="false"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="hibernateDaoSupport"
          class="org.springframework.orm.hibernate3.support.HibernateDaoSupport"
          abstract="true">
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--  JMX stuff -->

    <bean id="hibernateStatisticsMBean" class="org.hibernate.jmx.StatisticsService">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="shared" value="true"/>
    </bean>

    <bean id="ehCacheMBeanRegistration"
          class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="net.sf.ehcache.management.ManagementService.registerMBeans"/>
        <property name="arguments">
            <list>
                <ref bean="cacheManager"/>
                <ref bean="mbeanServer"/>
                <value>true</value>
                <value>true</value>
                <value>true</value>
                <value>true</value>
            </list>
        </property>
    </bean>

    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true"/>
    </bean>


    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="beans">
            <map>
                <entry key="bean:name=hibernate" value-ref="hibernateStatisticsMBean"/>
            </map>
        </property>
    </bean> 
</beans>